platforms:
  - name: PS4
    type: Unity::console::ps4
    image: sdet/gamecode-ps4:latest
    flavor: b1.large
    setup: orbis-ctrl add %BOKKEN_DEVICE_IP%
    components:
      - editor
      - il2cpp
      - PS4
  - name: StandaloneWindows64
    type: Unity::VM::GPU
    image: sdet/gamecode_win10:stable
    flavor: b1.large
    components:
      - editor
      - il2cpp
projects:
  - name: HDRP_PerformanceTests
    folder: HDRP_PerformanceTests
suites:
  - mode: playmode
    filter: Counters
    platforms: [PS4]
  - mode: playmode
    filter: Memory
    platforms: [StandaloneWindows64]
  - mode: Editor
    filter: Build
    platforms: [StandaloneWindows64]
  - mode: Editor
    filter: StaticAnalysis
    platforms: [PS4]
---
{% for project in projects %}
{% for suite in suites %}
{% for platform in platforms %}

{% for allowed_platform in suite.platforms %}
{% if allowed_platform == platform.name %}

{{ project.name }}_{{ suite.filter }}_{{ platform.name }}:
  variables:
    HDRP_BRANCH: HDRP/staging
    EDITOR_VERSION: trunk
  name : Run {{ suite.filter }} Performance on {{ platform.name }}
  agent:
    type: {{ platform.type }}
    image: {{ platform.image }}
    flavor: {{ platform.flavor}}
  commands:
      {% if platform.setup %}
      - '{{ platform.setup }}'
      {% endif %}
      - pip install unity-downloader-cli --extra-index-url https://artifactory.internal.unity3d.com/api/pypi/common-python/simple --pre --upgrade
      - unity-downloader-cli -u %EDITOR_VERSION% {% for component in platform.components %}-c {{ component }} {% endfor %} --wait
      - git config --system core.longpaths true
      - git clone git@github.cds.internal.unity3d.com:unity/utr.git utr
      - git submodule update --init --recursive --remote Graphics
      - git submodule update --init --recursive --remote com.unity.render-pipelines.nda
      {% if 'CUSTOM-REVISION' != master %}
      - cd .\Graphics\ && git checkout %HDRP_BRANCH% && cd ..
      {% endif %}
      {% if platform.name == 'PS4' %}
      - xcopy .\com.unity.render-pipelines.nda\com.unity.render-pipelines.{{ platform.name }} .\Graphics\TestProjects\{{ project.folder }}\Packages\com.unity.render-pipelines.{{ platform.name }}\ /O /X /E /H /K
      - xcopy .\com.unity.render-pipelines.nda\com.unity.shaderanalysis.{{ platform.name }}.nda .\Graphics\TestProjects\{{ project.folder }}\Packages\com.unity.shaderanalysis.{{ platform.name }}.nda\ /O /X /E /H /K
      {% endif %}
      - mklink /J C:\Link .\Graphics
      - NetSh Advfirewall set allprofiles state off
      - utr/utr --timeout=2400 --loglevel=verbose --scripting-backend=Il2Cpp --suite={{ suite.mode }} --testfilter={{ suite.filter }} --platform={{ platform.name }} --testproject=C:/Link/TestProjects/{{ project.folder }} --editor-location=.Editor --performance-project-version=./Graphics --report-performance-data --performance-project-id=HDRP --artifacts_path=test-results --player-connection-ip=%BOKKEN_HOST_IP%
  artifacts:
    logs:
      paths:
        - PrebuildLog/**
    results:
      paths:
        - "**/test-results/**/*"
        - "**/test-results/PerformanceTestReport.html"
  triggers:
    recurring:
      - branch: test-auto-perf
        frequency: daily

{% endif %}
{% endfor %}
{% endfor %}
{% endfor %}
{% endfor %}